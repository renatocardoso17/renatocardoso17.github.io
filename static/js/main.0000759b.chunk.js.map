{"version":3,"sources":["modules/header/data/routes.js","modules/header/Hamburger.jsx","modules/header/Header.jsx","data/contacts.js","modules/sidebar/Sidebar.jsx","modules/main/Main.jsx","modules/pages/home/Home.jsx","modules/pages/about/About.jsx","modules/pages/resume/components/Education/Degree.jsx","modules/pages/resume/components/Education.jsx","modules/pages/resume/components/Experience/Job.jsx","modules/pages/resume/components/Experience.jsx","modules/pages/resume/components/Skills/CategoryButton.jsx","modules/pages/resume/components/Skills/SkillBar.jsx","modules/pages/resume/components/Skills.jsx","modules/pages/resume/data/education.js","modules/pages/resume/data/experience.js","modules/pages/resume/data/skills.js","modules/pages/resume/Resume.jsx","modules/pages/stats/components/TableRow.jsx","modules/pages/stats/components/Table.jsx","modules/pages/stats/data/stats.js","modules/pages/stats/components/Personal.jsx","modules/pages/stats/data/github.js","modules/pages/stats/components/Site.jsx","modules/pages/stats/Stats.jsx","modules/pages/contact/Contact.jsx","modules/pages/not-found/NotFound.jsx","App.jsx","serviceWorker.js","index.js","assets/me.jpg","modules/pages/about/data/about.md","modules/pages/resume/data/RenatoCardosoCV.pdf"],"names":["routes","path","label","index","Hamburger","useState","open","setOpen","className","id","onClick","right","isOpen","map","l","key","Link","to","Header","filter","contacts","link","icon","faGithub","faFacebookF","faInstagram","faLinkedinIn","faTwitter","faEnvelope","Sidebar","src","me","alt","href","window","location","pathname","data","s","Main","props","context","scrollTo","titleTemplate","defaultTitle","this","children","fullPage","Component","defaultProps","Home","About","state","md","count","fetch","markdown","then","res","text","split","replace","length","setState","title","source","escapeHtml","Degree","degree","school","year","Education","Job","company","position","daterange","points","point","Experience","job","CategoryButton","handleClick","active","type","SkillBar","categories","category","competency","titleStyle","background","cat","includes","name","color","barStyle","width","String","Math","min","max","style","handleProps","skills","buttons","reduce","obj","All","skill","Object","assign","sort","Skills","handleChildClick","prevState","keys","some","nextProps","actCat","a","b","ret","getButtons","getRows","education","experience","sections","Resume","file","download","faDownload","sec","toLowerCase","TableRow","value","Table","pair","stats","age","countries","PersonalStats","personalData","setData","useEffect","timer","setInterval","birthTime","Date","now","toFixed","tick","clearInterval","github","Stats","Personal","Site","validateText","test","messages","Contact","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","current","useInterval","newIdx","newChar","slice","onMouseEnter","onMouseLeave","NotFound","App","basename","Switch","Route","exact","component","status","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.0000759b.chunk.js","sourcesContent":["const routes = [\n  {\n    path: '/',\n    label: 'Renato Cardoso',\n    index: true,\n  },\n  {\n    path: '/about',\n    label: 'About',\n  },\n  {\n    path: '/resume',\n    label: 'Resume',\n  },\n  {\n    path: '/stats',\n    label: 'Stats',\n  },\n  {\n    path: '/contact',\n    label: 'Contact',\n  },\n];\n\nexport default routes;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Menu from 'react-burger-menu/lib/menus/slide';\n\nimport routes from './data/routes';\n\nconst Hamburger = () => {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <div className=\"hamburger-container\">\n            <nav className=\"main\" id=\"hambuger-nav\">\n                <ul>\n                    {open ? (\n                        <li className=\"menu close-menu\">\n                            <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#10005;</div>\n                        </li>\n                    ) : (\n                        <li className=\"menu open-menu\">\n                            <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#9776;</div>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n            <Menu right isOpen={open}>\n                <ul className=\"hamburger-ul\">\n                    {routes.map(l => (\n                        <li key={l.label}>\n                            <Link to={l.path} onClick={() => setOpen(!open)}>\n                                <h3 className={l.index && 'index-li'}>{l.label}</h3>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </Menu>\n        </div>\n    );\n};\n\nexport default Hamburger;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Hamburger from './Hamburger';\nimport routes from './data/routes';\n\nconst Header = () => (\n    <header id=\"header\">\n        <h1 className=\"index-link\">\n            {routes.filter(l => l.index)\n                .map(l => (\n                    <Link key={l.label} to={l.path}>{l.label}</Link>\n                ))}\n        </h1>\n        <nav className=\"links\">\n            <ul>\n                {routes.filter(l => !l.index)\n                    .map(l => (\n                        <li key={l.label}>\n                            <Link to={l.path}>{l.label}</Link>\n                        </li>\n                    ))}\n            </ul>\n        </nav>\n        <Hamburger />\n    </header>\n);\n\nexport default Header;\n","import { faGithub } from '@fortawesome/free-brands-svg-icons/faGithub';\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons/faFacebookF';\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons/faInstagram';\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons/faLinkedinIn';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope';\n\nconst contacts = [\n    {\n        link: 'https://github.com/renatocardoso17',\n        label: 'Github',\n        icon: faGithub,\n    },\n    {\n        link: 'https://facebook.com/renatocardoso17',\n        label: 'Facebook',\n        icon: faFacebookF,\n    },\n    {\n        link: 'https://www.instagram.com/renatocardoso17',\n        label: 'Instagram',\n        icon: faInstagram,\n    },\n    {\n        link: 'https://www.linkedin.com/in/renatocardoso17',\n        label: 'LinkedIn',\n        icon: faLinkedinIn,\n    },\n    {\n        link: 'https://twitter.com/renatocardoso17',\n        label: 'Twitter',\n        icon: faTwitter,\n    },\n    {\n        link: 'mailto:rc@renatocardoso.dev',\n        label: 'Email',\n        icon: faEnvelope,\n    }\n];\n\nexport default contacts;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nimport me from '../../assets/me.jpg';\n\nimport data from '../../data/contacts';\n\nconst Sidebar = () => (\n    <section id=\"sidebar\">\n        <section id=\"intro\">\n            <Link to=\"/\" className=\"logo\">\n                {/*<img src={`${BASE_PATH}/images/me_icon.jpg`} alt=\"\" />*/}\n                <img src={me} alt=\"\"/>\n            </Link>\n            <header>\n                <h2>Renato Cardoso</h2>\n                <p><a href=\"mailto:rc@renatocardoso.dev\">rc@renatocardoso.dev</a></p>\n            </header>\n        </section>\n\n        <section className=\"blurb\">\n            <h2>About</h2>\n            <p>Hi, I&apos;m Renato. I like building things.\n                Currently, I&apos;m a senior software developer creating awesome web apps for Paddy Power Betfair.\n                Click below and learn more about me.\n            </p>\n            <ul className=\"actions\">\n                <li>\n                    {/*{window.location.pathname !== `${BASE_PATH}/resume` ?*/}\n                    {window.location.pathname !== `/resume` ?\n                        <Link to=\"/resume\" className=\"button\">Learn More</Link> :\n                        <Link to=\"/about\" className=\"button\">About Me</Link>}\n                </li>\n            </ul>\n        </section>\n\n        <section id=\"footer\">\n            <ul className=\"icons\">\n                {data.map(s => (\n                    <li key={s.label}><a href={s.link}><FontAwesomeIcon icon={s.icon}/></a></li>\n                ))}\n            </ul>\n            <p className=\"copyright\">&copy; Renato Cardoso <Link to=\"/\">renatocardoso.dev</Link>.</p>\n        </section>\n    </section>\n);\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nimport Header from '../header/Header';\nimport Sidebar from '../sidebar/Sidebar';\n\n// if (NODE_ENV === 'production') {\n//   ReactGA.initialize(GA_ID);\n// }\n\nclass Main extends Component {\n    constructor(props, context) {\n        super(props, context);\n        window.scrollTo(0, 0);\n    }\n\n    componentDidMount() {\n        // if (NODE_ENV === 'production') {\n        //   ReactGA.set({\n        //     page: window.location.pathname,\n        //   });\n        //   ReactGA.pageview(window.location.pathname);\n        // }\n    }\n\n    render() {\n        return (\n            <div id=\"wrapper\">\n                <Helmet titleTemplate=\"%s | Renato Cardoso\" defaultTitle=\"Renato Cardoso\" />\n                <Header />\n                <div id=\"main\">\n                    {this.props.children}\n                </div>\n                {!this.props.fullPage && <Sidebar />}\n            </div>);\n    }\n}\n\nMain.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    fullPage: PropTypes.bool,\n};\n\nMain.defaultProps = {\n    children: null,\n    fullPage: false,\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../../main/Main';\n\nconst Home = () => (\n    <Main>\n        <article className=\"post\" id=\"index\">\n            <header>\n                <div className=\"title\">\n                    <h2><Link to=\"/\">About this site</Link></h2>\n                    <p>A beautiful, responsive, react app written with modern Javascript.</p>\n                </div>\n            </header>\n            <p> Welcome to my website. Please feel free to read more <Link to=\"/about\">about me</Link>,\n                or you can check out my {' '}\n                <Link to=\"/resume\">resume</Link>, {' '}\n                view <Link to=\"/stats\">site statistics</Link>, {' '}\n                or <Link to=\"/contact\">contact</Link> me.\n            </p>\n        </article>\n    </Main>\n);\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport ReactMarkdown from 'react-markdown';\n\nimport Main from '../../main/Main';\n\nimport markdown from './data/about.md';\n\nclass About extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            md: '',\n            count: 0\n        };\n        fetch(markdown)\n            .then((res) => res.text())\n            .then((md) => {\n                const count = md.split(/\\s+/)\n                    .map(s => s.replace(/\\W/g, ''))\n                    .filter(s => s.length).length;\n                this.setState({md, count});\n            });\n    }\n\n    render() {\n        return (\n            <Main>\n                <Helmet title=\"About\"/>\n                <article className=\"post\" id=\"about\">\n                    <header>\n                        <div className=\"title\">\n                            <h2><Link to=\"/about\">About Me</Link></h2>\n                            <p>(in about {this.state.count} words)</p>\n                        </div>\n                    </header>\n                    <ReactMarkdown\n                        source={this.state.md}\n                        escapeHtml={false}\n                    />\n                </article>\n            </Main>\n        );\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({data}) => (\n    <article className=\"degree-container\">\n        <header>\n            <h4 className=\"degree\">{data.degree}</h4>\n            <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n        </header>\n    </article>\n);\n\nDegree.propTypes = {\n    data: PropTypes.shape({\n        degree: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        school: PropTypes.string.isRequired,\n        year: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({data}) => (\n    <div className=\"education\">\n        <div className=\"link-to\" id=\"education\"/>\n        <div className=\"title\">\n            <h3>Education</h3>\n        </div>\n        {data.map(degree => (\n            <Degree\n                data={degree}\n                key={degree.school}\n            />\n        ))}\n    </div>\n);\n\nEducation.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        school: PropTypes.string,\n        degree: PropTypes.string,\n        link: PropTypes.string,\n        year: PropTypes.number,\n    })),\n};\n\nEducation.defaultProps = {\n    data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({data}) => (\n    <article className=\"jobs-container\">\n        <header>\n            <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n            <p className=\"daterange\"> {data.daterange}</p>\n        </header>\n        <ul className=\"points\">\n            {\n                data.points.map(point => (<li key={point}>{point}</li>))\n            }\n        </ul>\n    </article>\n);\n\nJob.propTypes = {\n    data: PropTypes.shape({\n        link: PropTypes.string.isRequired,\n        company: PropTypes.string.isRequired,\n        position: PropTypes.string.isRequired,\n        daterange: PropTypes.string.isRequired,\n        points: PropTypes.arrayOf(PropTypes.string).isRequired,\n    }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({data}) => (\n    <div className=\"experience\">\n        <div className=\"link-to\" id=\"experience\"/>\n        <div className=\"title\">\n            <h3>Experience</h3>\n        </div>\n        {data.map(job => (\n            <Job\n                data={job}\n                key={job.company}\n            />\n        ))}\n    </div>\n);\n\nExperience.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        company: PropTypes.string,\n        position: PropTypes.string,\n        link: PropTypes.string,\n        daterange: PropTypes.string,\n        points: PropTypes.arrayOf(PropTypes.string),\n    })),\n};\n\nExperience.defaultProps = {\n    data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({handleClick, active, label}) => (\n    <button\n        className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n        type=\"button\"\n        onClick={() => handleClick(label)}\n    >\n        {label}\n    </button>\n);\n\nCategoryButton.propTypes = {\n    label: PropTypes.string.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({data, categories}) => {\n    const {category, competency, title} = data;\n\n    // TODO: Consider averaging colors\n    const titleStyle = {\n        background: categories\n            .filter(cat => category.includes(cat.name))\n            .map(cat => cat.color)[0]\n    };\n\n    const barStyle = {\n        ...titleStyle,\n        width: `${String(Math.min(100, Math.max((competency / 10.0) * 100.0, 0)))}%`,\n    };\n\n    return (\n        <div className=\"skillbar clearfix\">\n            <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n            <div className=\"skillbar-bar\" style={barStyle}/>\n            <div className=\"skill-bar-percent\">{competency} / 10</div>\n        </div>\n    );\n};\n\nSkillBar.propTypes = {\n    data: PropTypes.shape({\n        category: PropTypes.arrayOf(PropTypes.string).isRequired,\n        competency: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n    }).isRequired,\n    categories: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        color: PropTypes.string,\n    })),\n};\n\nSkillBar.defaultProps = {\n    categories: [],\n};\n\nexport default SkillBar;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({categories, skills}) => ({\n    buttons: categories.map(cat => cat.name).reduce((obj, key) => ({\n        ...obj,\n        [key]: false,\n    }), {All: true}),\n    skills: skills.map(skill => Object.assign(skill, {\n        category: skill.category.sort(),\n    })),\n});\n\nclass Skills extends Component {\n    constructor(props) {\n        super(props);\n        this.state = handleProps({categories: props.categories, skills: props.skills});\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(handleProps({categories: nextProps.categories, skills: nextProps.skills}));\n    }\n\n    getRows() {\n        // search for true active categories\n        const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n            this.state.buttons[key] ? key : cat\n        ), 'All');\n\n        return this.state.skills.sort((a, b) => {\n            let ret = 0;\n            if (a.competency > b.competency) ret = -1;\n            else if (a.competency < b.competency) ret = 1;\n            else if (a.category[0] > b.category[0]) ret = -1;\n            else if (a.category[0] < b.category[0]) ret = 1;\n            else if (a.title > b.title) ret = 1;\n            else if (a.title < b.title) ret = -1;\n            return ret;\n        }).filter(skill => (actCat === 'All' || skill.category.includes(actCat)))\n            .map(skill => (\n                <SkillBar\n                    categories={this.props.categories}\n                    data={skill}\n                    key={skill.title}\n                />\n            ));\n    }\n\n    getButtons() {\n        return Object.keys(this.state.buttons).map(key => (\n            <CategoryButton\n                label={key}\n                key={key}\n                active={this.state.buttons}\n                handleClick={this.handleChildClick}\n            />\n        ));\n    }\n\n    handleChildClick = (label) => {\n        this.setState((prevState) => {\n            // Toggle button that was clicked. Turn all other buttons off.\n            const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n                ...obj,\n                [key]: (label === key) && !prevState.buttons[key],\n            }), {});\n            // Turn on 'All' button if other buttons are off\n            buttons.All = !Object.keys(prevState.buttons).some(key => buttons[key]);\n            return {buttons};\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"skills\">\n                <div className=\"link-to\" id=\"skills\"/>\n                <div className=\"title\">\n                    <h3>Skills</h3>\n                    <p>Note: I think these sections are silly, but everyone seems to have one.</p>\n                </div>\n                <div className=\"skill-button-container\">\n                    {this.getButtons()}\n                </div>\n                <div className=\"skill-row-container\">\n                    {this.getRows()}\n                </div>\n            </div>\n        );\n    }\n}\n\nSkills.propTypes = {\n    skills: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        competency: PropTypes.number,\n        category: PropTypes.arrayOf(PropTypes.string),\n    })),\n    categories: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        color: PropTypes.string,\n    })),\n};\n\nSkills.defaultProps = {\n    skills: [],\n    categories: [],\n};\n\nexport default Skills;\n","const education = [\n    {\n        school: 'Faculty of Engineering - Oporto University',\n        degree: 'M.S. Informatics and Computing Engineering',\n        link: 'https://sigarra.up.pt/feup/en/CUR_GERAL.CUR_VIEW?pv_curso_id=742&pv_origem=CUR&pv_ano_lectivo=2010',\n        year: 2011,\n    }\n];\n\nexport default education;\n","const experience = [\n    {\n        company: 'Paddy Power Betfair (Blip)',\n        position: 'Senior Software Developer',\n        link: 'https://blip.pt',\n        daterange: 'February 2014 - Present',\n        points: [\n            'Involved on the development of the sportsbook mobile single page application (https://www.betfair.com/sport).',\n            'Working in several small projects in the Risk & Trading department contributing to the risk management domain.',\n            'Spring Boot, Maven, HTML, JavaScript, CSS, AngularJS, ReactJS, Redux, NodeJS, Nginx, Bash.'\n        ],\n    },\n    {\n        company: 'Morrisons',\n        position: 'Systems Analyst',\n        link: 'https://morrisons.com/',\n        daterange: 'September 2012 - February 2014',\n        points: [\n            'Development, implementation and customisation of several modules of Oracle products (ORMS, OReSA, OReIM) as well as existing systems integration.',\n            'Technical and functional documentation production.',\n            'Oracle Forms, Java, ProC, PL/SQL, Bash.'\n        ],\n    },\n    {\n        company: 'Wipro Retail',\n        position: 'Project Programmer',\n        link: 'https://www.wipro.com/retail/',\n        daterange: 'August 2011 - September 2012',\n        points: [\n            'Development, implementation and customisation of several modules of Oracle products (RMS - Retail Merchandising System, SIM - Store Inventory Management, etc...) both technical and functional level.',\n            'Volume and performance testing.',\n            'Technical documentation production.',\n            'Oracle Forms, Java, ProC, PL/SQL, Bash.'\n        ],\n    },\n    {\n        company: 'OPT',\n        position: 'Computer Programmer',\n        link: 'http://opt.pt/mudarIdioma.asp?url=/index.asp',\n        daterange: 'February 2011 - July 2011',\n        points: [\n            'Development of a real time routing planner algorithm.',\n            'Work done under the project Move-me (http://move-me.mobi/) with an android application and a website launched.',\n            'C#, NHibernate.'\n        ],\n    }\n];\n\nexport default experience;\n","// TODO: How should these be sorted?\n\n// TODO: Add Althetic Skills, Office Skills (?)\nexport const categories = [\n    {\n        name: 'Databases',\n        color: '#3896e2'\n    },\n    {\n        name: 'Frameworks',\n        color: '#64cb7b'\n    },\n    {\n        name: 'Javascript',\n        color: '#6968b3'\n    },\n    {\n        name: 'Languages',\n        color: '#40494e'\n    },\n    {\n        name: 'Tools',\n        color: '#d75858'\n    },\n    {\n        name: 'Web Development',\n        color: '#cc7b94'\n    }\n];\n\nexport const skills = [\n    {\n        title: 'Javascript',\n        competency: 8,\n        category: ['Web Development', 'Languages'],\n    },\n    {\n        title: 'Java',\n        competency: 8,\n        category: ['Languages'],\n    },\n    {\n        title: 'NodeJS',\n        competency: 8,\n        category: ['Web Development', 'Frameworks', 'Javascript'],\n    },\n    {\n        title: 'ReactJS',\n        competency: 6,\n        category: ['Web Development', 'Frameworks', 'Javascript'],\n    },\n    {\n        title: 'AngularJS',\n        competency: 6,\n        category: ['Web Development', 'Frameworks', 'Javascript'],\n    },\n    {\n        title: 'Spring Boot',\n        competency: 8,\n        category: ['Web Development', 'Frameworks', 'Java'],\n    },\n    {\n        title: 'Bash',\n        competency: 6,\n        category: ['Tools', 'Languages'],\n    },\n    {\n        title: 'MySQL',\n        competency: 7,\n        category: ['Databases'],\n    },\n    {\n        title: 'Oracle',\n        competency: 7,\n        category: ['Databases'],\n    },\n    {\n        title: 'ExpressJS',\n        competency: 6,\n        category: ['Web Development', 'Frameworks', 'Javascript'],\n    },\n    {\n        title: 'Git',\n        competency: 7,\n        category: ['Tools'],\n    },\n    {\n        title: 'HTML',\n        competency: 6,\n        category: ['Web Development', 'Languages'],\n    },\n    {\n        title: 'CSS',\n        competency: 5,\n        category: ['Web Development', 'Languages'],\n    },\n    {\n        title: 'SASS/SCSS',\n        competency: 5,\n        category: ['Web Development', 'Languages'],\n    },\n    {\n        title: 'LESS',\n        competency: 5,\n        category: ['Web Development', 'Languages'],\n    },\n    {\n        title: 'C++',\n        competency: 6,\n        category: ['Languages'],\n    },\n    {\n        title: 'C#',\n        competency: 6,\n        category: ['Languages'],\n    }\n];\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faDownload} from '@fortawesome/free-solid-svg-icons';\n\nimport Main from '../../main/Main';\n\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Skills from './components/Skills';\n\nimport education from './data/education';\nimport experience from './data/experience';\nimport {categories, skills} from './data/skills';\n\nimport file from './data/RenatoCardosoCV.pdf';\n\nconst sections = [\n    'Education',\n    'Experience',\n    'Skills'\n];\n\nconst Resume = () => (\n    <Main>\n        <Helmet title=\"Resume\"/>\n        <article className=\"post\" id=\"resume\">\n            <header>\n                <div className=\"title\">\n                    <h2>\n                        <Link to=\"resume\">Resume</Link>\n                        <a href={file} download>\n                            <FontAwesomeIcon icon={faDownload} className=\"download\"/>\n                        </a>\n                    </h2>\n                    <div className=\"link-container\">\n                        {sections.map(sec => (\n                            <h4 key={sec}>\n                                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n                            </h4>))}\n                    </div>\n\n                </div>\n            </header>\n            <Education data={education}/>\n            <Experience data={experience}/>\n            <Skills skills={skills} categories={categories}/>\n\n        </article>\n    </Main>\n);\n\nexport default Resume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({label, link, value}) => (\n    <tr>\n        <td>{label}</td>\n        <td width=\"150px\">{link.length ? (<a href={link}>{value}</a>) : value}</td>\n    </tr>\n);\n\nTableRow.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    link: PropTypes.string,\n};\n\nTableRow.defaultProps = {\n    link: '',\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from './TableRow';\n\nconst Table = ({data}) => (\n    <table>\n        <tbody>\n        {data.map(pair => (\n            <TableRow\n                key={pair.label}\n                label={pair.label}\n                value={pair.value}\n                link={pair.link}\n            />\n        ))}\n        </tbody>\n    </table>\n);\n\nTable.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]).isRequired,\n        link: PropTypes.string,\n    })).isRequired,\n};\n\nexport default Table;\n","const stats = {\n    age: {\n        label: 'Current age',\n        value: 0,\n    },\n    countries: {\n        label: 'Countries visited',\n        value: 20,\n        link: 'https://www.google.com/maps/d/embed?mid=1uwdPfWRl3wOJhj9CvwYOdk2khRTQRmVW',\n    },\n    location: {\n        label: 'Current city',\n        value: 'Oporto, Portugal',\n    }\n};\n\nexport default stats;\n","import React, {Fragment, useEffect, useState} from 'react';\n\nimport Table from './Table';\nimport personalData from '../data/stats';\n\nconst PersonalStats = () => {\n    const [data, setData] = useState(personalData);\n\n    const tick = () => {\n        const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n        const birthTime = new Date('1988-06-17T20:00:00');\n        setData(Object.assign({}, data, {\n            age: {\n                label: 'Current age',\n                value: ((Date.now() - birthTime) / divisor).toFixed(11),\n            },\n        }));\n    };\n\n    useEffect(() => {\n        const timer = setInterval(() => tick(), 25);\n        return () => {\n            clearInterval(timer);\n        };\n    });\n\n    return (\n        <Fragment>\n            <h3>Some stats about me</h3>\n            <Table data={Object.keys(data).map(key => data[key])}/>\n        </Fragment>\n    );\n};\n\nexport default PersonalStats;\n","// TODO To be provided by an API\nconst github = [\n    {\n        label: 'Number of linter warnings',\n        // TODO ammend this with a pre-commit hook\n        // `npm run lint | grep problems | tail -1 | awk '{print $2}'`\n        value: '0',\n    },\n    { /* find . | grep \".js\" | grep -vE \".min.js|node_modules|build|functions|.git|.json\" | xargs -I file cat file | wc -l */\n        label: 'Lines of Javascript powering this website',\n        value: '1304'\n    }\n];\n\nexport default github;\n","import React from 'react';\n\nimport Table from './Table';\nimport data from '../data/github';\n\nconst Stats = () => (\n    <div>\n        <h3>Some stats about this site</h3>\n        <Table\n            data={data}\n        />\n    </div>\n);\n\nexport default Stats;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Helmet from 'react-helmet';\n\nimport Main from '../../main/Main';\n\nimport Personal from './components/Personal';\nimport Site from './components/Site';\n\nconst Stats = () => (\n    <Main>\n        <Helmet title=\"Stats\"/>\n        <article className=\"post\" id=\"stats\">\n            <header>\n                <div className=\"title\">\n                    <h2><Link to=\"/stats\">Stats</Link></h2>\n                </div>\n            </header>\n            <Personal/>\n            <Site/>\n        </article>\n    </Main>\n);\n\nexport default Stats;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Main from '../../main/Main';\n\nimport data from '../../../data/contacts';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n    // NOTE: Passes RFC 5322 but not tested on google's standard.\n    // eslint-disable-next-line no-useless-escape\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n    return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n    'rc',\n    'hi',\n    'hello',\n    'hola',\n    'you-can-email-me-at-literally-anything! Really',\n    'well, not anything. But most things',\n    'like-this',\n    'or-this',\n    'but not this :(  ',\n    'you.can.also.email.me.with.specific.topics.like',\n    'just-saying-hi',\n    'please-work-for-us',\n    'help',\n    'admin',\n    'or-I-really-like-your-website',\n    'I\\'ll-stop-distracting-you-now',\n    'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        if (delay) {\n            const id = setInterval(() => {\n                savedCallback.current();\n            }, delay);\n            return () => clearInterval(id);\n        }\n        return () => {}; // pass linter\n    }, [delay]);\n};\n\nconst Contact = () => {\n    const hold = 50; // ticks to wait after message is complete before rendering next message\n    const delay = 50; // tick length in mS\n\n    const [idx, updateIter] = useState(0); // points to current message\n    const [message, updateMessage] = useState(messages[idx]);\n    const [char, updateChar] = useState(messages[idx].length); // points to current char\n    const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n    useInterval(() => {\n        let newIdx = idx;\n        let newChar = char;\n        if (char - hold >= messages[idx].length) {\n            newIdx += 1;\n            newChar = 0;\n        }\n        if (newIdx === messages.length) {\n            setIsActive(false);\n        } else {\n            updateMessage(messages[newIdx].slice(0, newChar));\n            updateIter(newIdx);\n            updateChar(newChar + 1);\n        }\n    }, isActive ? delay : null);\n\n    return (\n        <Main>\n            <Helmet title=\"Contact\" />\n            <article className=\"post\" id=\"contact\">\n                <header>\n                    <div className=\"title\">\n                        <h2><Link to=\"/contact\">Contact</Link></h2>\n                    </div>\n                </header>\n                <div className=\"email-at\">\n                    <p>Feel free to get in touch. You can email me at: </p>\n                    <div\n                        className=\"inline-container\"\n                        style={validateText(message) ? {} : { color: 'red' }}\n                        onMouseEnter={() => setIsActive(false)}\n                        onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n                    >\n                        <a href={validateText(message) ? `mailto:${message}@renatocardoso.dev` : ''}>\n                            <span>{message}</span>\n                            <span>@renatocardoso.dev</span>\n                        </a>\n                    </div>\n                </div>\n                <ul className=\"icons\">\n                    {data.map(s => (\n                        <li key={s.label}><a href={s.link}><FontAwesomeIcon icon={s.icon} /></a></li>\n                    ))}\n                </ul>\n            </article>\n        </Main>\n    );\n};\n\nexport default Contact;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Helmet from 'react-helmet';\n\nconst NotFound = () => (\n    <div className=\"not-found\">\n        <Helmet title=\"404\"/>\n        <h1>Page Not Found.</h1>\n        <p>Return to <Link to=\"/\">index</Link>.</p>\n    </div>\n);\n\nexport default NotFound;\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './modules/pages/home/Home';\nimport About from './modules/pages/about/About';\nimport Resume from './modules/pages/resume/Resume';\nimport Stats from './modules/pages/stats/Stats';\nimport Contact from './modules/pages/contact/Contact';\n\nimport NotFound from './modules/pages/not-found/NotFound';\n// All of our CSS\nimport './static/css/main.scss';\n\n// import Player from './modules/player/Player';\n\nclass App extends Component {\n    render() {\n        return (\n            //<Router basename={BASE_PATH}>\n            <Router basename=\"/\">\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/about\" component={About}/>\n                    <Route path=\"/stats\" component={Stats}/>\n                    <Route path=\"/contact\" component={Contact}/>\n                    <Route path=\"/resume\" component={Resume}/>\n                    {/*<Route path=\"/player\" component={Player} />*/}\n                    <Route component={NotFound} status={404}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAaTTFwVXGOPH10b93J4DV1eteu4iPs8jc\",\n    authDomain: \"my-webiste-58f92.firebaseapp.com\",\n    databaseURL: \"https://my-webiste-58f92.firebaseio.com\",\n    projectId: \"my-webiste-58f92\",\n    storageBucket: \"my-webiste-58f92.appspot.com\",\n    messagingSenderId: \"499391346675\",\n    appId: \"1:499391346675:web:3ce7ae9fd3235626a5c486\",\n    measurementId: \"G-5BPVT2VKW5\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/me.36c9d2f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about.0b72aa36.md\";","module.exports = __webpack_public_path__ + \"static/media/RenatoCardosoCV.932b280a.pdf\";"],"sourceRoot":""}